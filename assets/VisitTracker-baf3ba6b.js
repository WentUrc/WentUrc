class g{constructor(e="wenturc-"){this.prefix=e}_getKey(e){return`${this.prefix}${e}`}setString(e,r){localStorage.setItem(this._getKey(e),String(r))}getString(e,r=""){const t=localStorage.getItem(this._getKey(e));return t!==null?t:r}setNumber(e,r){localStorage.setItem(this._getKey(e),String(Number(r)))}getNumber(e,r=0){const t=localStorage.getItem(this._getKey(e));if(t===null)return r;const s=parseInt(t,10);return isNaN(s)?r:s}setBoolean(e,r){localStorage.setItem(this._getKey(e),r?"true":"false")}getBoolean(e,r=!1){const t=localStorage.getItem(this._getKey(e));return t===null?r:t==="true"}setObject(e,r){try{localStorage.setItem(this._getKey(e),JSON.stringify(r))}catch(t){console.error(`保存数据失败: ${e}`,t)}}getObject(e,r={}){const t=localStorage.getItem(this._getKey(e));if(t===null)return r;try{return JSON.parse(t)}catch(s){return console.error(`解析存储数据失败: ${e}`,s),r}}hasKey(e){return localStorage.getItem(this._getKey(e))!==null}remove(e){localStorage.removeItem(this._getKey(e))}clear(){Object.keys(localStorage).filter(e=>e.startsWith(this.prefix)).forEach(e=>localStorage.removeItem(e))}}const o=new g("wenturc-");class f{constructor(e){this.manager=e}initialize(){this.checkConsecutiveVisits(),this.checkSpecialTimeAchievements(),this.checkWeekendAchievement()}checkConsecutiveVisits(){const e=new Date;e.setHours(0,0,0,0);const r=e.toISOString().split("T")[0],t=o.getObject("visit-dates",[]);if(!t.includes(r)){t.push(r);const c=t.length>30?t.slice(t.length-30):[...t];o.setObject("visit-dates",c)}const s=[...t].sort();this.calculateMaxConsecutiveDays(s)>=5&&this.manager.unlockAchievement("loyal-fan"),o.setNumber("consecutive-days",this.calculateCurrentStreak(s))}checkSpecialTimeAchievements(){const e=new Date().getHours();e>=0&&e<5&&this.manager.unlockAchievement("night-owl"),e>=5&&e<8&&this.manager.unlockAchievement("early-bird")}checkWeekendAchievement(){const e=new Date().getDay();(e===0||e===6)&&this.manager.unlockAchievement("weekend-warrior")}calculateMaxConsecutiveDays(e){if(!e.length)return 0;let r=1,t=1;for(let s=1;s<e.length;s++){const n=new Date(e[s-1]),c=new Date(e[s]),a=Math.abs(c-n),i=Math.ceil(a/(1e3*60*60*24));i===1?(t++,r=Math.max(r,t)):i>1&&(t=1)}return r}calculateCurrentStreak(e){if(!e.length)return 0;const r=new Date;r.setHours(0,0,0,0);let t=1;const s=new Date(e[e.length-1]),n=Math.abs(r-s);if(Math.ceil(n/(1e3*60*60*24))>1)return 0;for(let a=e.length-2;a>=0;a--){const i=new Date(e[a+1]),u=new Date(e[a]),h=Math.abs(i-u);if(Math.ceil(h/(1e3*60*60*24))===1)t++;else break}return t}cleanup(){}}export{f as default};
